// <auto-generated />
using System;
using DevIO.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevIO.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevIO.Business.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvaliacaoUtil")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("ProdutoId");

                    b.Property<int?>("QuantidadeEstrela");

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("DevIO.Business.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataFabricacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("datetime");

                    b.Property<string>("DescricaoProduto")
                        .HasColumnType("text");

                    b.Property<string>("FotoProduto")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("NomeProduto")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPromocao")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("ValorProduto")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("DevIO.Business.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DevIO.Business.Models.Avaliacao", b =>
                {
                    b.HasOne("DevIO.Business.Models.Produto", "Produto")
                        .WithMany("Avaliacao")
                        .HasForeignKey("ProdutoId")
                        .HasConstraintName("FK_Avaliacoes_Produto");

                    b.HasOne("DevIO.Business.Models.Usuario", "Usuario")
                        .WithMany("Avaliacao")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Avaliacoes_Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
