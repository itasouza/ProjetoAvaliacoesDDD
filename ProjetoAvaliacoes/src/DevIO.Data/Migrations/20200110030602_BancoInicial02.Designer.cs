// <auto-generated />
using System;
using DevIO.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevIO.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20200110030602_BancoInicial02")]
    partial class BancoInicial02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevIO.Business.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("AvaliacaoUtil")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("PedidoDetalheId");

                    b.Property<int?>("QuantidadeEstrela");

                    b.Property<string>("Titulo")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("PedidoDetalheId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("DevIO.Business.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<int>("EstadoId");

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("DevIO.Business.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("CidadeId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("EstadoId");

                    b.Property<string>("NomeCliente")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DevIO.Business.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Sigla")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("DevIO.Business.Models.ImagemProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("FotoProduto")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("ProdutoId");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ImagemProdutos");
                });

            modelBuilder.Entity("DevIO.Business.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("DevIO.Business.Models.PedidoDetalhe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<int>("PedidoId");

                    b.Property<int>("ProdutoId");

                    b.Property<int?>("Quantidade");

                    b.Property<decimal?>("ValorProduto");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoDetalhes");
                });

            modelBuilder.Entity("DevIO.Business.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataFabricacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("datetime");

                    b.Property<string>("DescricaoProduto")
                        .HasColumnType("text");

                    b.Property<string>("NomeProduto")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ProdutoPromocao")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("ValorProduto")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("DevIO.Business.Models.Avaliacao", b =>
                {
                    b.HasOne("DevIO.Business.Models.PedidoDetalhe", "PedidoDetalhe")
                        .WithMany("Avaliacao")
                        .HasForeignKey("PedidoDetalheId")
                        .HasConstraintName("FK_Avaliacao_Pedido_Detalhe");
                });

            modelBuilder.Entity("DevIO.Business.Models.Cidade", b =>
                {
                    b.HasOne("DevIO.Business.Models.Estado", "Estado")
                        .WithMany("Cidade")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_Cidade_Estado");
                });

            modelBuilder.Entity("DevIO.Business.Models.ImagemProduto", b =>
                {
                    b.HasOne("DevIO.Business.Models.Produto", "Produto")
                        .WithMany("ImagemProduto")
                        .HasForeignKey("ProdutoId")
                        .HasConstraintName("FK_ImagemProduto_Produto");
                });

            modelBuilder.Entity("DevIO.Business.Models.Pedido", b =>
                {
                    b.HasOne("DevIO.Business.Models.Cliente", "Cliente")
                        .WithMany("Pedido")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_Pedido_Cliente");
                });

            modelBuilder.Entity("DevIO.Business.Models.PedidoDetalhe", b =>
                {
                    b.HasOne("DevIO.Business.Models.Pedido", "Pedido")
                        .WithMany("PedidoDetalhe")
                        .HasForeignKey("PedidoId")
                        .HasConstraintName("FK__PedidoDetalhe_Pedido");

                    b.HasOne("DevIO.Business.Models.Produto", "Produto")
                        .WithMany("PedidoDetalhe")
                        .HasForeignKey("ProdutoId")
                        .HasConstraintName("FK_PedidoDetalhe_Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
