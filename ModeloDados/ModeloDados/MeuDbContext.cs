// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DevIO.Business.Models
{
    public partial class MeuDbContext : DbContext
    {
        public MeuDbContext()
        {
        }

        public MeuDbContext(DbContextOptions<MeuDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Avaliacao> Avaliacao { get; set; }
        public virtual DbSet<Cidade> Cidade { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<ImagemProduto> ImagemProduto { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<PedidoDetalhe> PedidoDetalhe { get; set; }
        public virtual DbSet<Produto> Produto { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<Avaliacao>(entity =>
            {
                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.AvaliacaoUtil)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DataAlteracao).HasColumnType("datetime");

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.Descricao).HasColumnType("text");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.HasOne(d => d.PedidoDetalhe)
                    .WithMany(p => p.Avaliacao)
                    .HasForeignKey(d => d.PedidoDetalheId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Avaliacao__Pedid__49C3F6B7");
            });

            modelBuilder.Entity<Cidade>(entity =>
            {
                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DataAlteracao).HasColumnType("datetime");

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.Nome)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.HasOne(d => d.Estado)
                    .WithMany(p => p.Cidade)
                    .HasForeignKey(d => d.EstadoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Cidade__EstadoId__47DBAE45");
            });

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DataAlteracao).HasColumnType("datetime");

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NomeCliente)
                    .HasMaxLength(250)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Estado>(entity =>
            {
                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DataAlteracao).HasColumnType("datetime");

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.Nome)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Sigla)
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ImagemProduto>(entity =>
            {
                entity.HasKey(e => e.ImagemId)
                    .HasName("PK__ImagemPr__0CBF2AEE76749D32");

                entity.Property(e => e.FotoProduto)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.HasOne(d => d.Produto)
                    .WithMany(p => p.ImagemProduto)
                    .HasForeignKey(d => d.ProdutoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ImagemPro__Produ__45F365D3");
            });

            modelBuilder.Entity<Pedido>(entity =>
            {
                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DataAlteracao).HasColumnType("datetime");

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.ValorTotal).HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.Cliente)
                    .WithMany(p => p.Pedido)
                    .HasForeignKey(d => d.ClienteId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Pedido__ClienteI__46E78A0C");
            });

            modelBuilder.Entity<PedidoDetalhe>(entity =>
            {
                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DataAlteracao).HasColumnType("datetime");

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.ValorProduto).HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.Pedido)
                    .WithMany(p => p.PedidoDetalhe)
                    .HasForeignKey(d => d.PedidoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PedidoDet__Pedid__48CFD27E");

                entity.HasOne(d => d.Produto)
                    .WithMany(p => p.PedidoDetalhe)
                    .HasForeignKey(d => d.ProdutoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PedidoDet__Produ__44FF419A");
            });

            modelBuilder.Entity<Produto>(entity =>
            {
                entity.Property(e => e.Ativo)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DataAlteracao).HasColumnType("datetime");

                entity.Property(e => e.DataCadastro).HasColumnType("datetime");

                entity.Property(e => e.DataFabricacao).HasColumnType("datetime");

                entity.Property(e => e.DataValidade).HasColumnType("datetime");

                entity.Property(e => e.DescricaoProduto).HasColumnType("text");

                entity.Property(e => e.NomeProduto)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.ProdutoPromocao)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ValorProduto).HasColumnType("decimal(18, 2)");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}